{"version":3,"sources":["store/slice/auth/index.ts","store/index.ts","hooks/index.ts","services/auth/index.ts","utils/utils.ts","services/carSearch/index.ts","components/CardCar/CardCar.tsx","pages/SearchResults/SearchResults.tsx","App.tsx","index.tsx"],"names":["authSlice","createSlice","name","initialState","isAuthenticated","token","reducers","setAuth","state","action","payload","actions","store","configureStore","reducer","AuthReducer","useAppSelector","useSelector","ApiAuthUrl","process","CREDENTIALS","getAuthToken","a","agencyId","agencyKey","clientId","fetch","method","headers","body","JSON","stringify","response","ok","Error","statusText","json","formatDate","date","day","slice","month","currentDecade","Date","getFullYear","toFixed","year","carSearch","originCityCode","destinationCityCode","pickUpDate","dropOffDate","data","PickUpLocation","cityCode","toUpperCase","continentCode","countryCode","region","id","provider","latitude","longitude","DropOffLocation","PickUpDate","PickUpTime","DropOffDate","DropOffTime","RateTypeCode","CarCategoryType","PaymentType","corporateDiscount","AgencyUrl","Authorization","CardCar","car","carBaggage","category","companyImageUrl","companyName","dailyRate","dailyRateCurrency","doors","imageUrl","model","passengers","totalRate","totalRateCurrency","className","src","alt","length","Math","ceil","type","SearchResults","useParams","useState","carsData","setCarsData","useEffect","res","map","floor","random","App","dispatch","useDispatch","fallback","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d939c301.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface AuthState {\n  isAuthenticated: boolean\n  token: string\n}\n\nconst initialState: AuthState = {\n  isAuthenticated: false,\n  token: '',\n}\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setAuth: (state, action: PayloadAction<AuthState>) => {\n      state.isAuthenticated = action.payload.isAuthenticated\n      state.token = action.payload.token\n    },\n  },\n})\n\nexport const { setAuth } = authSlice.actions\nexport default authSlice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport AuthReducer from './slice/auth'\n\nexport const store = configureStore({\n  reducer: {\n    AuthReducer,\n  },\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from 'store'\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","const ApiAuthUrl = process.env.REACT_APP_API_URL_AUTH\n\nconst CREDENTIALS = {\n  agencyId: 'DQgPjq82EpDunKRGv',\n  agencyKey: 'wnaurtm4FIGFV9QZ7hjTvkNfNRHKkE/w7XzbsL4sSMCdYuvVDT8JRJ3PArlbQJZpTFZIyg5oQmxUsujV0DS8TA==',\n  clientId: 'https://test.destinojet.co',\n}\n\nexport const getAuthToken = async (\n  agencyId = CREDENTIALS.agencyId,\n  agencyKey = CREDENTIALS.agencyKey,\n  clientId = CREDENTIALS.clientId\n) => {\n  const response = await fetch(`${ApiAuthUrl}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ agencyId, agencyKey, clientId }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const token = await response.json()\n\n  return token\n}\n","export const formatDate = (date: string): string => {\n  const day = date.slice(0, 2)\n  const month = date.slice(2, 4)\n  const currentDecade = new Date().getFullYear().toFixed().slice(0, 2)\n  const year = `${currentDecade}${date.slice(4)}`\n\n  return `${year}-${month}-${day}`\n}\n","import Car from 'interfaces/car.interface'\nimport { formatDate } from 'utils/utils'\n\nconst ApiAuthUrl = process.env.REACT_APP_API_URL\n\nexport const carSearch = async (\n  token: string,\n  originCityCode = '',\n  destinationCityCode = '',\n  pickUpDate = '',\n  dropOffDate = ''\n): Promise<Car[]> => {\n  const data = {\n    PickUpLocation: {\n      cityCode: originCityCode.toUpperCase(),\n      continentCode: 0,\n      countryCode: 'US',\n      region: 'unitedStates',\n      id: 'cd10124d-9c05-499d-ba4f-973937542744',\n      name: 'Miami Intl',\n      provider: '',\n      latitude: 25.793,\n      longitude: -80.291,\n    },\n    DropOffLocation: {\n      cityCode: destinationCityCode.toUpperCase(),\n      continentCode: 0,\n      countryCode: 'US',\n      region: 'unitedStates',\n      id: 'cd10124d-9c05-499d-ba4f-973937542744',\n      name: 'Miami Intl',\n      provider: '',\n      latitude: 25.793,\n      longitude: -80.291,\n    },\n    PickUpDate: formatDate(pickUpDate),\n    PickUpTime: '0930',\n    DropOffDate: formatDate(dropOffDate),\n    DropOffTime: '0930',\n    RateTypeCode: 0,\n    CarCategoryType: 0,\n    PaymentType: 0,\n    corporateDiscount: '0',\n    AgencyUrl: 'test.destinojet.co',\n  }\n\n  const response = await fetch(`${ApiAuthUrl}/cars/search`, {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  })\n\n  return response.json()\n}\n","/* eslint-disable react/destructuring-assignment */\nimport './CardCar.css'\nimport Car from 'interfaces/car.interface'\n\nconst CardCar = (car: Car) => {\n  const {\n    carBaggage,\n    category,\n    companyImageUrl,\n    companyName,\n    dailyRate,\n    dailyRateCurrency,\n    doors,\n    imageUrl,\n    model,\n    passengers,\n    totalRate,\n    totalRateCurrency,\n  } = car\n\n  return (\n    <div className=\"card-bg\">\n      <div className=\"card\">\n        <div className=\"card_header\">\n          <div className=\"card_header_img\">\n            <img src={imageUrl} alt={`imagen-${model}`} />\n          </div>\n          <div className=\"rectangle_percent\">\n            <span className=\"text_rectangle\">-30%</span>\n          </div>\n        </div>\n\n        <div className=\"card_body\">\n          <main>\n            <div>\n              <img className=\"company_logo\" src={companyImageUrl} alt={companyName} />\n            </div>\n            <h3 className=\"category\">{category}</h3>\n            <h2 className=\"model\">{model}</h2>\n            <div className=\"constainer_icons_idicators\">\n              <div className=\"item_icon_indicator\">\n                <span className=\"material-icons\">people_outline</span>\n                <span className=\"text_icon_indicator\">{passengers}</span>\n              </div>\n              <div className=\"item_icon_indicator\">\n                <span className=\"material-icons\">meeting_room</span>{' '}\n                <span className=\"text_icon_indicator\">{doors}</span>\n              </div>\n              <div className=\"item_icon_indicator\">\n                <span className=\"material-icons\">luggage</span>{' '}\n                <span className=\"text_icon_indicator\">{carBaggage.length}</span>\n              </div>\n            </div>\n            <div className=\"rectangle_car_icon\">\n              <span className=\"material-icons\">directions_car</span>\n            </div>\n          </main>\n          <div className=\"container_costs\">\n            <span className=\"cost_service\">\n              {dailyRateCurrency} {dailyRate}\n            </span>\n            <span className=\"day_text\">/dia</span>\n            <div className=\"cost_day_service\">\n              {totalRateCurrency} {totalRate} {`/ ${Math.ceil(totalRate / dailyRate)} días`}\n            </div>\n          </div>\n        </div>\n        <div className=\"card_footer\">\n          <button className=\"boton_reserva\" type=\"button\">\n            Reservar\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CardCar\n","import './SearchResults.css'\nimport Car from 'interfaces/car.interface'\nimport { carSearch } from 'services/carSearch'\nimport { useAppSelector } from 'hooks'\nimport { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport CardCar from 'components/CardCar'\n\nconst SearchResults = () => {\n  const token = useAppSelector((state) => state.AuthReducer.token)\n  const { originCityCode, destinationCityCode, pickUpDate, dropOffDate } = useParams()\n  const [carsData, setCarsData] = useState<Car[]>([])\n\n  useEffect(() => {\n    ;(async () => {\n      const res = await carSearch(token, originCityCode, destinationCityCode, pickUpDate, dropOffDate)\n      setCarsData(res)\n    })()\n    return () => {}\n  }, [])\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Hola Daniel Eduardo,</h1>\n      <p className=\"sub_title\">Ahorra hasta un 30% agregando un auto en tu viaje a Chicago.</p>\n\n      <div className=\"cards_grid\">\n        {carsData.map((car) => (\n          <div key={`${car.model}-${Math.floor(Math.random() * 99999) + 1}`}>\n            <CardCar\n              carBaggage={car.carBaggage}\n              category={car.category}\n              companyImageUrl={car.companyImageUrl}\n              companyName={car.companyName}\n              dailyRate={car.dailyRate}\n              dailyRateCurrency={car.dailyRateCurrency}\n              doors={car.doors}\n              imageUrl={car.imageUrl}\n              model={car.model}\n              passengers={car.passengers}\n              totalRate={car.totalRate}\n              totalRateCurrency={car.totalRateCurrency}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default SearchResults\n","import { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport { Suspense, useEffect } from 'react'\nimport { useAppDispatch, useAppSelector } from 'hooks'\nimport { getAuthToken } from 'services/auth'\nimport { setAuth } from 'store/slice/auth'\nimport SearchResults from 'pages/SearchResults'\n\nconst App = () => {\n  const dispatch = useAppDispatch()\n  const { isAuthenticated } = useAppSelector((state) => state.AuthReducer)\n\n  useEffect(() => {\n    ;(async () => {\n      if (!isAuthenticated) {\n        const token = await getAuthToken()\n        const auth = { isAuthenticated: true, token }\n        dispatch(setAuth(auth))\n      }\n    })()\n    return () => {}\n  }, [isAuthenticated])\n\n  if (!isAuthenticated) return null\n\n  return (\n    <BrowserRouter>\n      <Suspense fallback={<h1>cargando...</h1>}>\n        <Routes>\n          <Route path=\"*\" element={<p>No Found</p>} />\n          <Route path=\"/\" element={<p>Bienvenido</p>} />\n          <Route\n            path=\"/challenge/:originCityCode/:destinationCityCode/:pickUpDate/:dropOffDate\"\n            element={<SearchResults />}\n          />\n        </Routes>\n      </Suspense>\n    </BrowserRouter>\n  )\n}\nexport default App\n","import './index.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { store } from 'store'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}